void PIDfollowLine(int PROPORTIONAL_GAIN, int INTEGRAL_GAIN, int DERIVATIVE_GAIN){
            static float lastOffset;
            static int lineOffsetSum = 0;

            int lineOffset = frontLeftVal-frontRightVal;
            lineOffsetSum = lineOffsetSum + lineOffset;

            float Integral = INTEGRAL_GAIN * lineOffsetSum;
            float Derivative = DERIVATIVE_GAIN * (lineOffset-lastOffset);
            float Proportional = PROPORTIONAL_GAIN * (lineOffset);

            lastOffset = lineOffset;

            //THE CONTROLLER SECTION
            speedDifference = Proportional + Integral + Derivative;
            motorSpeedLeft = motorSpeed-speedDifference;
            motorSpeedRight = motorSpeed + speedDifference;
            
            myMotorLeft->setSpeed(motorSpeedLeft);
            myMotorLeft->run(motorDirectionLeft);
            myMotorRight->setSpeed(motorSpeedRight);
            myMotorRight->run(motorDirectionRight);
        }



// runMotors(-1*motorSpeed,1*motorSpeed);

// if(farLeftVal == 0){
//     currentRoutine == ActionType::DECIDE_CONTROL;
    // runMotors(0,0);

//     if(position == PositionList::TUNNEL && direction == Directions::TOWARDS_PILL){
//         position = PositionList::PILL;
//         Serial.println("Joined Pill");
//         return;
//     }

//     if(position == PositionList::PILL && numTargetLocationPassed==2){
//         position == PositionList::TUNNEL;
//         direction == Directions::AWAY_FROM_PILL;
//         Serial.println("Turned onto Tunnel");
//         return;
//     }
//